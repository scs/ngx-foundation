{"version":3,"sources":["../../src/utils/triggers.ts"],"names":[],"mappings":"AAKA,OAAO,EAAE,OAAO,EAAE,MAAM,iBAAiB,CAAC;AAE1C,IAAM,eAAe,GAAG;IACtB,KAAK,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC;IACnC,KAAK,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC;CAC/B,CAAC;AAEF,MAAM,wBAAwB,QAAgB,EAAE,OAA8B;IAA9B,wBAAA,EAAA,yBAA8B;IAC5E,IAAM,eAAe,GAAG,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;IAEhD,EAAE,CAAC,CAAC,eAAe,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;QACjC,MAAM,CAAC,EAAE,CAAC;IACZ,CAAC;IAED,IAAM,cAAc,GAAG,eAAe,CAAC,KAAK,CAAC,KAAK,CAAC;SAChD,GAAG,CAAC,UAAC,OAAe,IAAK,OAAA,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC;SAC5C,GAAG,CAAC,UAAC,WAAqB;QACzB,IAAI,KAAK,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC;QACnD,MAAM,CAAC,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC;IAEL,IAAM,cAAc,GAAG,cAAc;SAClC,MAAM,CAAC,UAAC,WAAoB,IAAK,OAAA,WAAW,CAAC,QAAQ,EAAE,EAAtB,CAAsB,CAAC,CAAC;IAE5D,EAAE,CAAC,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;QAC9B,MAAM,0DAA0D,CAAC;IACnE,CAAC;IAED,EAAE,CAAC,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;QAC7D,MAAM,0EAA0E,CAAC;IACnF,CAAC;IAED,MAAM,CAAC,cAAc,CAAC;AACxB,CAAC;AAED,MAAM,2BAA2B,QAAkB,EAAE,MAAW,EAAE,QAAgB,EACjD,MAAgB,EAAE,MAAgB,EAAE,QAAkB;IACrF,IAAM,cAAc,GAAG,aAAa,CAAC,QAAQ,CAAC,CAAC;IAC/C,IAAM,SAAS,GAAU,EAAE,CAAC;IAE5B,EAAE,CAAC,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QAChE,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC;IAC5B,CAAC;IAED,cAAc,CAAC,OAAO,CAAC,UAAC,OAAgB;QACtC,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,KAAK,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;YACnC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC;YAChE,MAAM,CAAC;QACT,CAAC;QAED,SAAS,CAAC,IAAI,CACZ,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,EAC7C,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;IACpD,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,cAAQ,SAAS,CAAC,OAAO,CAAC,UAAC,aAAuB,IAAK,OAAA,aAAa,EAAE,EAAf,CAAe,CAAC,CAAC,CAAC,CAAC,CAAC;AACpF,CAAC","file":"triggers.js","sourceRoot":"","sourcesContent":["/**\r\n * @copyright Valor Software\r\n * @copyright Angular ng-bootstrap team\r\n */\r\nimport { Renderer } from '@angular/core';\r\nimport { Trigger } from './trigger.class';\r\n\r\nconst DEFAULT_ALIASES = {\r\n  hover: ['mouseenter', 'mouseleave'],\r\n  focus: ['focusin', 'focusout']\r\n};\r\n\r\nexport function parseTriggers(triggers: string, aliases: any = DEFAULT_ALIASES): Trigger[] {\r\n  const trimmedTriggers = (triggers || '').trim();\r\n\r\n  if (trimmedTriggers.length === 0) {\r\n    return [];\r\n  }\r\n\r\n  const parsedTriggers = trimmedTriggers.split(/\\s+/)\r\n    .map((trigger: string) => trigger.split(':'))\r\n    .map((triggerPair: string[]) => {\r\n      let alias = aliases[triggerPair[0]] || triggerPair;\r\n      return new Trigger(alias[0], alias[1]);\r\n    });\r\n\r\n  const manualTriggers = parsedTriggers\r\n    .filter((triggerPair: Trigger) => triggerPair.isManual());\r\n\r\n  if (manualTriggers.length > 1) {\r\n    throw 'Triggers parse error: only one manual trigger is allowed';\r\n  }\r\n\r\n  if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\r\n    throw 'Triggers parse error: manual trigger can\\'t be mixed with other triggers';\r\n  }\r\n\r\n  return parsedTriggers;\r\n}\r\n\r\nexport function listenToTriggers(renderer: Renderer, target: any, triggers: string,\r\n                                 showFn: Function, hideFn: Function, toggleFn: Function): Function {\r\n  const parsedTriggers = parseTriggers(triggers);\r\n  const listeners: any[] = [];\r\n\r\n  if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\r\n    return Function.prototype;\r\n  }\r\n\r\n  parsedTriggers.forEach((trigger: Trigger) => {\r\n    if (trigger.open === trigger.close) {\r\n      listeners.push(renderer.listen(target, trigger.open, toggleFn));\r\n      return;\r\n    }\r\n\r\n    listeners.push(\r\n      renderer.listen(target, trigger.open, showFn),\r\n      renderer.listen(target, trigger.close, hideFn));\r\n  });\r\n\r\n  return () => { listeners.forEach((unsubscribeFn: Function) => unsubscribeFn()); };\r\n}\r\n"]}